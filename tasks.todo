*** NOTE ***
When viewing this file in Visual Studio Code use Todo+ plugin
    ext install fabiospampinato.vscode-todo-plus
and add following line to settings
    "todo.symbols.box": "❑"

Parser:
    ✔ Add conversion from `RegExpTail` to `RegularExpression` @done(17-12-10 03:45)
    ✔ Handle whitespaces in regular expression parsing @done(17-12-10 14:09)
    ✔ Test query parsing @done(17-12-10 15:59)
    ❑ Improve syntax (possibly use FsLex and FsYacc)
    ❑ Add node constraint which returns bool (only one operand in expression) or add bool value @low
    ❑ Parse complex node constraints
    ❑ Parse arithmetic constraints
    ❑ Parse ontologies


Query execution:
    ✔ Build NFA @done(17-12-18 23:16)
    ✔ Regular expression matching (1-node constraints) @today @done(18-01-13 21:00)
    ✔ 1-Node constraints checking @today @done(18-01-13 17:10)
    ✔ Instantiate free variables with found nodes (basic) @done(18-01-14 01:49)
    ❑ k-node constraints checking @high
    ✔ Handle k-path constraints (basic) @high @done(18-02-04 02:17)
    ❑ Bool type
    ❑ Regular expression matching (k-node constraints, basic version) @high 
    ❑ Optimisation: Neighbour queries for k-node constraints @high 
    ❑ Matching same final-nodes used in different paths @high 
    ❑ Sequence of nodes in path constraints (registers?)
    ❑ Match nodes that satisfy regular constraints (as a whole) @high 
    ❑ Matching arithmetic constraints

Graph / Data storage:
    ✔ Basic graph representation @done(18-01-13 16:03)
    ❑ Import graph from csv @medium
    ❑ Sample graph data
    ❑ Optimized graph representation @low

Client / General:
    ❑ Separate client from service:
        ❑ Handle communication between client and service
        ❑ Command line interface
    ❑ Logging with Logary
    ❑ Results visualisation (possibly other, web-based client)

Docs:
    ❑ Examples of usage
    ✔ Add README.md file @done(17-12-10 16:24)
